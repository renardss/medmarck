import asyncpg
from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandStart
from keyboards.default.menu import menu, rehabilitation_sub, it_health_sub, vitamins
import time
from loader import dp, db


@dp.message_handler(CommandStart())
async def bot_start(message: types.Message):
    try:
        user = await db.add_user(telegram_id=message.from_user.id,
                                 full_name=message.from_user.full_name,
                                 username=message.from_user.username)
    except asyncpg.exceptions.UniqueViolationError:
        user = await db.select_user(telegram_id=message.from_user.id)

    count = await db.count_users()

    # –ó–∞–±–∏—Ä–∞–µ–º –∫–∞–∫ —Å–ø–∏—Å–æ–∫ –∏–ª–∏ –∫–∞–∫ —Å–ª–æ–≤–∞—Ä—å
    user_data = list(user)
    user_data_dict = dict(user)

    # –ó–∞–±–∏—Ä–∞–µ–º –Ω–∞–ø—Ä—è–º—É—é –∫–∞–∫ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ —Å–ª–æ–≤–∞—Ä—è
    username = user.get("username")
    full_name = user[2]
    await message.answer(
        "\n".join([
            f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! \n–°–µ–≥–æ–¥–Ω—è —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É –±–æ–ª–µ–µ 75% –Ω–∞ –º–Ω–æ–≥–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è, –µ—Å–ª–∏ —Å–¥–µ–ª–∞–µ—à—å –∑–∞–∫–∞–∑ –∑–¥–µ—Å—å –≤ –¢–µ–ª–µ–≥—Ä–∞–º–µ —á–µ—Ä–µ–∑ –º–µ–Ω—èü§©‚úÖ\n–ò—Å–ø–æ–ª—å–∑—É–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –°–ï–ì–û–î–ù–Øüî•üî•üî•',
        ])
    )
    #await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!\n–°–µ–≥–æ–¥–Ω—è —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É –±–æ–ª–µ–µ 75% –Ω–∞ –º–Ω–æ–≥–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è, –µ—Å–ª–∏ —Å–¥–µ–ª–∞–µ—à—å –∑–∞–∫–∞–∑ –∑–¥–µ—Å—å –≤ –¢–µ–ª–µ–≥—Ä–∞–º–µ —á–µ—Ä–µ–∑ –º–µ–Ω—èü§©‚úÖ\n–ò—Å–ø–æ–ª—å–∑—É–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –°–ï–ì–û–î–ù–Øüî•üî•üî•")
    time.sleep(7)
    await message.answer(f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–πüëá",
    reply_markup=menu)


@dp.message_handler(text="üèÉ‚Äç‚ôÇÔ∏è–†–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è")
async def get_rehabilitation(message: types.Message):
    await message.answer("–•–æ—Ä–æ—à–æüëç–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –æ–¥–Ω–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Öüëá",
    reply_markup=rehabilitation_sub)


@dp.message_handler(text="üì±IT –ó–¥–æ—Ä–æ–≤—å–µ")
async def get_rehabilitation(message: types.Message):
    await message.answer("–•–æ—Ä–æ—à–æüëç–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –æ–¥–Ω–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Öüëá",
    reply_markup=it_health_sub)

@dp.message_handler(text="üí™–í–∏—Ç–∞–º–∏–Ω—ã –∏ –º–∏–Ω–µ—Ä–∞–ª—ã")
async def get_rehabilitation(message: types.Message):
    await message.answer("–•–æ—Ä–æ—à–æüëç–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –æ–¥–Ω–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Öüëá",
    reply_markup=vitamins)
# import asyncpg
# from aiogram import types
# from aiogram.dispatcher.filters.builtin import CommandStart
#
# from loader import dp, db


# @dp.message_handler(CommandStart())
# async def bot_start(message: types.Message):
#     try:
#         user = await db.add_user(telegram_id=message.from_user.id,
#                                  full_name=message.from_user.full_name,
#                                  username=message.from_user.username)
#     except asyncpg.exceptions.UniqueViolationError:
#         user = await db.select_user(telegram_id=message.from_user.id)
#
#     count = await db.count_users()
#
#     # –ó–∞–±–∏—Ä–∞–µ–º –∫–∞–∫ —Å–ø–∏—Å–æ–∫ –∏–ª–∏ –∫–∞–∫ —Å–ª–æ–≤–∞—Ä—å
#     user_data = list(user)
#     user_data_dict = dict(user)
#
#     # –ó–∞–±–∏—Ä–∞–µ–º –Ω–∞–ø—Ä—è–º—É—é –∫–∞–∫ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ —Å–ª–æ–≤–∞—Ä—è
#     username = user.get("username")
#     full_name = user[2]
#
#     await message.answer(
#         "\n".join(
#             [
#                 f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!',
#                 f'–¢—ã –±—ã–ª –∑–∞–Ω–µ—Å–µ–Ω –≤ –±–∞–∑—É',
#                 f'–í –±–∞–∑–µ <b>{count}</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
#                 "",
#                 f"<code>User: {username} - {full_name}",
#                 f"{user_data=}",
#                 f"{user_data_dict=}</code>"
#             ]))
